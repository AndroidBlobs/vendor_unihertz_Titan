on post-fs
	write /proc/bootprof "tkcore: prepare system ta path"
	chown system system /vendor/app/t6

	write /proc/bootprof "tkcore: prepare protect_f sfs"
	restorecon /mnt/vendor/protect_f
	mkdir /mnt/vendor/protect_f/tee
	chown system system /mnt/vendor/protect_f/tee
	restorecon /mnt/vendor/protect_f/tee
	start teed

on property:vendor.trustkernel.fs.state=ready
	write /proc/bootprof "tkcore: prepare basic"
	mkdir /data/vendor/t6
	chown system system /data/vendor/t6
	restorecon /data/vendor/t6

	write /proc/bootprof "tkcore: prepare sfs"
	mkdir /data/vendor/t6/fs
	chown system system /data/vendor/t6/fs
	restorecon /data/vendor/t6/fs

	write /proc/bootprof "tkcore: prepare service provider ta path"
	mkdir /data/vendor/t6/app
	chown system system /data/vendor/t6/app
	restorecon /data/vendor/t6/app

# For non-encrypted case
on property:ro.crypto.state=unencrypted
	setprop vendor.trustkernel.fs.mode 1
	setprop vendor.trustkernel.fs.state ready

# For FDE/encrypted successfully
on property:vold.decrypt=trigger_restart_framework
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready

# For FBE/encrypted successfully
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
	setprop vendor.trustkernel.fs.mode 3
	setprop vendor.trustkernel.fs.state ready

on property:vendor.trustkernel.log.state=ready
	write /proc/bootprof "tkcore: prepare log file"
	restorecon /data/vendor/t6/tkcore.log
	setprop vendor.trustkernel.log.state enable

service teed /vendor/bin/teed \
    --datapath /data/vendor/t6/fs \
    --sptapath /data/vendor/t6/app \
    --systapath /vendor/app/t6 \
    --prot /mnt/vendor/protect_f/tee \
    --logpath /data/vendor/t6/tkcore.log \
    --proprefix vendor.trustkernel
	user system
	group system
	class core
